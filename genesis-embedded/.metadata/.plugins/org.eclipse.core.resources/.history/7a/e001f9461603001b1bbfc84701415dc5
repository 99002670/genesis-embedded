/*
 * STM32F407xx.h
 *
 *  Created on: Sep 30, 2020
 *      Author: milind
 */
#include "STM32F407xx_gpio_driver.h"

void GPIO_PeriphClkCtrl(GPIO_REGDEF_t *pGPIOx, uint8_t EnOrDis)
{
    if(EnOrDis == ENABLE){
        if(pGPIOx == GPIOA){
            GPIOA_PCLK_EN();
        }
        else if(pGPIOx == GPIOB){
            GPIOB_PCLK_EN();
        }
        else if(pGPIOx == GPIOC){
            GPIOC_PCLK_EN();
        }
        else if(pGPIOx == GPIOD){
            GPIOD_PCLK_EN();
        }
        else if(pGPIOx == GPIOE){
            GPIOE_PCLK_EN();
        }
        else if(pGPIOx == GPIOF){
            GPIOF_PCLK_EN();
        }
        else if(pGPIOx == GPIOG){
            GPIOG_PCLK_EN();
        }
        else if(pGPIOx == GPIOH){
            GPIOH_PCLK_EN();
        }
        else if(pGPIOx == GPIOI){
            GPIOI_PCLK_EN();
        }
    }
    else{
        //Disable
    }
}

void GPIO_Init(GPIO_Handle_t *GPIO_Handle)
{
    //Init mode
    uint32_t temp = 0;
    temp = (pGPIO_Handle->GPIO_PinConfig.GPIO_PinMode<<(2*GPIO_Handle->GPIO_PinConfig.GPIO_PinNumber));
    GPIO_Handle->pGPIOx->MODER = temp;
    //Init speed


    //Init pull-up and pull-down


    //Init output type


    //Init alternating fuction


}

void GPIO_Dinit(GPIO_REGDEF_t *pGPIOx)
{

}

uint8_t GPIO_ReadFromInputPin(GPIO_REGDEF_t *pGPIOx, uint8_t PinNumber)
{

}

uint16_t GPIO_ReadFromInputPort(GPIO_REGDEF_t *pGPIOx)
{

}

void GPIO_WriteToOutputPin(GPIO_REGDEF_t *pGPIOx, uint8_t PinNumber, uint8_t Value)
{

}

void GPIO_WriteToOutputPort(GPIO_REGDEF_t *pGPIOx, uint16_t Value)
{

}

void GPIO_ToggleOutputPin(GPIO_REGDEF_t *pGPIOx, uint8_t PinNumber)
{

}
